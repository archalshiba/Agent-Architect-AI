{"id":"frontend-001","title":"Initialize core Next.js configuration","description":"Create essential configuration files for a Next.js project, including `package.json` with initial dependencies (Next.js, React, Tailwind CSS), `next.config.js` for Next.js specific settings, `tsconfig.json` for TypeScript, `.gitignore` for version control, and `.prettierrc` for code formatting. Also, generate a basic `README.md` file.","expected_files":["package.json","next.config.js","tsconfig.json",".gitignore",".prettierrc","README.md"],"checks":["file exists package.json","file exists next.config.js","file exists tsconfig.json","package.json contains 'next' and 'react' dependencies",".gitignore contains '.next/'"],"prompt_template":"SYSTEM: You are an expert Next.js developer. Your task is to initialize the core configuration files for a new Next.js project named 'Agent Architect AI'.\n\nUSER:\n1. Create `package.json`: Include \"next\", \"react\", \"react-dom\", \"tailwindcss\", \"autoprefixer\", \"postcss\" as dependencies. Use \"typescript\" and \"@types/react\" as devDependencies. Set up basic scripts for \"dev\", \"build\", \"start\", \"lint\".\n2. Create `next.config.js`: An empty Next.js configuration file for future use.\n3. Create `tsconfig.json`: Standard TypeScript configuration for a Next.js project.\n4. Create `.gitignore`: Include common Next.js and Node.js ignores like `.next/`, `node_modules/`, `.env.local`, `.env`. Also include build artifacts from 'dist' or 'out' directories.\n5. Create `.prettierrc`: Configure Prettier for single quotes, trailing commas (all), and semi (false).\n6. Create `README.md`: A basic README file with the project name \"Agent Architect AI\" and the description \"An AI-powered platform that transforms your app ideas into structured, multi-stage build plans.\"\n\nEnsure all files are created in the project root."}
{"id":"frontend-002","title":"Set up Tailwind CSS and PostCSS configuration","description":"Create and configure `tailwind.config.js` and `postcss.config.js` to integrate Tailwind CSS with the Next.js project. This involves specifying content paths for Tailwind to scan and registering PostCSS plugins.","expected_files":["tailwind.config.js","postcss.config.js"],"checks":["file exists tailwind.config.js","file exists postcss.config.js","postcss.config.js includes 'tailwindcss' and 'autoprefixer'","tailwind.config.js content array includes 'app/**/*.{js,ts,jsx,tsx,mdx}'"],"prompt_template":"SYSTEM: You are an expert frontend developer specializing in Tailwind CSS. Your task is to configure Tailwind CSS for a Next.js project.\n\nUSER:\n1. Create `tailwind.config.js`: Configure the `content` array to scan all relevant files for Tailwind classes. Specifically, include `src/pages/**/*.{js,ts,jsx,tsx,mdx}`, `src/components/**/*.{js,ts,jsx,tsx,mdx}`, `src/app/**/*.{js,ts,jsx,tsx,mdx}`, `src/lib/**/*.{js,ts,jsx,tsx,mdx}`, `src/hooks/**/*.{js,ts,jsx,tsx,mdx}`.\n2. Create `postcss.config.js`: Include `tailwindcss` and `autoprefixer` plugins.\n\nEnsure both files are created in the project root."}
{"id":"frontend-003","title":"Create Next.js root layout and global CSS","description":"Develop the root `layout.tsx` for the Next.js `app` directory, establishing the basic HTML structure for the application. Also, create `globals.css` to import Tailwind's base styles and any custom global CSS rules.","expected_files":["src/app/layout.tsx","src/styles/globals.css"],"checks":["file exists src/app/layout.tsx","file exists src/styles/globals.css","layout.tsx exports a RootLayout component","layout.tsx contains <html> and <body> tags","globals.css imports tailwindcss base, components, and utilities"],"prompt_template":"SYSTEM: You are an expert Next.js developer. Your task is to create the foundational layout and global styles for the 'Agent Architect AI' application.\n\nUSER:\n1. Create `src/styles/globals.css`:\n   - Add the three essential Tailwind CSS directives: `@tailwind base;`, `@tailwind components;`, `@tailwind utilities;`.\n2. Create `src/app/layout.tsx`:\n   - Import `globals.css` into this file.\n   - Define a `RootLayout` React component that takes `children` as props.\n   - Render the basic HTML structure: `<html>`, `<body>`, and place `children` inside `<body>`.\n   - Add appropriate metadata for the 'Agent Architect AI' project (e.g., `title: 'Agent Architect AI'`, `description: 'An AI-powered platform that transforms your app ideas into structured, multi-stage build plans.'`).\n   - Use `Inter` font from `next/font/google` for a modern look, if available, and apply it to the `<body>` element. Otherwise, use a sensible system font stack.\n   - Ensure the `lang=\"en\"` attribute is set on the `<html>` tag.\n\nEnsure `layout.tsx` is in `src/app/` and `globals.css` is in `src/styles/`."}
{"id":"frontend-004","title":"Create root homepage and add public assets","description":"Create a basic `src/app/page.tsx` that will serve as the application's homepage. Also, ensure the `favicon.ico` and `vercel.svg` are present in the `public` directory. For the image files, the agent should create placeholder text files if it cannot generate actual images.","expected_files":["src/app/page.tsx","public/favicon.ico","public/vercel.svg"],"checks":["file exists src/app/page.tsx","file exists public/favicon.ico","file exists public/vercel.svg","page.tsx exports a default Home component"],"prompt_template":"SYSTEM: You are an expert Next.js developer. Your task is to create the main homepage component and ensure essential public assets are in place for the 'Agent Architect AI' project.\n\nUSER:\n1. Create `src/app/page.tsx`:\n   - Define a simple functional React component named `Home`.\n   - This component should render a basic `<h1>` tag with \"Welcome to Agent Architect AI\" and a `<p>` tag with a placeholder message like \"Your ideas, transformed into actionable build plans.\".\n   - Use Tailwind CSS classes for basic styling (e.g., `text-center`, `p-8`, `text-3xl font-bold`).\n2. Create `public/favicon.ico`: Create a placeholder empty file named `favicon.ico`. This is a binary file, so an empty file is acceptable.\n3. Create `public/vercel.svg`: Create a placeholder empty file named `vercel.svg`. This is a binary file, so an empty file is acceptable.\n\nEnsure `page.tsx` is located in `src/app/` and the asset files are in `public/`."}
{"id":"frontend-005","title":"Initialize .env.local with placeholder variables","description":"Create the `.env.local` file and populate it with placeholder environment variables required for Supabase and OpenAI integration, as well as a JWT secret for authentication. These variables will be crucial for connecting the frontend to the backend services.","expected_files":[".env.local"],"checks":["file exists .env.local","file contains NEXT_PUBLIC_SUPABASE_URL","file contains NEXT_PUBLIC_SUPABASE_ANON_KEY","file contains OPENAI_API_KEY","file contains JWT_SECRET"],"prompt_template":"SYSTEM: You are a DevOps-minded developer. Your task is to set up the local environment variables for the Next.js application, 'Agent Architect AI'.\n\nUSER:\nCreate a file named `.env.local` in the project root. Populate it with the following placeholder environment variables, using empty strings as their initial values:\n- `NEXT_PUBLIC_SUPABASE_URL`\n- `NEXT_PUBLIC_SUPABASE_ANON_KEY`\n- `OPENAI_API_KEY`\n- `JWT_SECRET`\n\nThese variables are critical for connecting to Supabase, OpenAI, and handling authentication securely."}
{"id":"frontend-006","title":"Create essential frontend directory structure","description":"Create the necessary empty directory structure within `src/` as outlined in the project's `fileTree`. This establishes the organizational framework for components, libraries (Supabase, OpenAI, utilities), hooks, types, and dedicated API routes and test directories, preparing the project for subsequent development stages.","expected_files":["src/app/auth/login","src/app/auth/signup","src/app/dashboard","src/app/new-idea","src/app/plan/[id]","src/app/settings","src/app/api/auth","src/app/api/ideas","src/app/api/plans","src/app/api/ai/generate-plan","src/components","src/lib/supabase","src/lib/openai","src/lib/utils","src/hooks","src/types","src/tests/unit","src/tests/e2e"],"checks":["directory exists src/components","directory exists src/lib/supabase","directory exists src/lib/openai","directory exists src/lib/utils","directory exists src/hooks","directory exists src/types","directory exists src/app/dashboard","directory exists src/app/api/auth","directory exists src/tests/unit","directory exists src/tests/e2e"],"prompt_template":"SYSTEM: You are an organized developer preparing the project structure for a large Next.js application, 'Agent Architect AI'.\n\nUSER:\nCreate the following empty directories within the `src/` directory to establish the project's folder structure. Ensure all parent directories are also created if they don't exist:\n- `src/app/auth/login`\n- `src/app/auth/signup`\n- `src/app/dashboard`\n- `src/app/new-idea`\n- `src/app/plan/[id]`\n- `src/app/settings`\n- `src/app/api/auth`\n- `src/app/api/ideas`\n- `src/app/api/plans`\n- `src/app/api/ai/generate-plan`\n- `src/components`\n- `src/lib/supabase`\n- `src/lib/openai`\n- `src/lib/utils`\n- `src/hooks`\n- `src/types`\n- `src/tests/unit`\n- `src/tests/e2e`\n\nDo not create any files inside these directories; just create the empty folders to set up the project's architecture."}